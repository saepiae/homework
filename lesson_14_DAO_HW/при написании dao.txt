--DROP TABLE IF EXIST schedules CASCADE ;
-- CREATE TABLE schedules(
--   schedule_id SERIAL,
--   program integer REFERENCES programs(program_id),	--удалять через  каскад
--   lesson_serial_number integer NOT NULL,
--   lesson_theme text NOT NULL,
--   PRIMARY KEY (schedule_id),
--   UNIQUE(program, lesson_serial_number)
-- );
--INSERT INTO schedules (program, lesson_serial_number, lesson_theme) VALUES
--  (1, 1, 'Введение'),
--  (1, 2, 'Основы конструкции языка'),
--  (2, 1, 'Введение'),
--  (2, 2, 'Типы данных'),
--  (2, 3, 'Основы конструкции языка'),
--  (2, 4, 'Экзамен'),
--  (3, 1, 'Тест навыков'),
--  (3, 2, 'Введение'),
--  (3, 3, 'Логирование'),
--  (3, 4, 'Тестирование'),
--  (3, 5, 'Экзамен'),
--  (4, 1, 'JDBC'),
--  (4, 2, 'тест'),
--  (5, 1, 'основы SQL'),
--  (5, 2, 'JDBC'),
--  (5, 3, 'экзамен');

SELECT * FROM schedules;
SELECT
  sch.schedule_id AS schedule_PK,
  p.program_id AS program_PK,
  p.specialty AS specialty_FK,
  --    s.specialty_id AS specialty_PK,
  s.specialty_name AS specialty,
  s.specialty_code AS abbreviation,
  p.approval_date AS date,
--  sch.program AS program_FK,
sch.lesson_serial_number AS lesson,
sch.lesson_theme AS theme
FROM programs p
LEFT JOIN schedules sch
ON p.program_id = sch.program
INNER JOIN specialties s
ON p.specialty=s.specialty_id
WHERE p.program_id=3
;



DROP TABLE IF EXISTS teams CASCADE;
CREATE TABLE teams(
  team_id SERIAL,
  start_training date NOT NULL,
  end_training date NOT NULL,
  group_number integer NOT NULL,
  program integer REFERENCES programs(program_id),	--проверить, чтобы дата создания программы была не позднее, чем начало  обучения
  PRIMARY KEY (team_id),
  UNIQUE (program, group_number)
);
INSERT INTO teams (start_training, end_training, group_number, program) VALUES
  ('2018-01-01','2018-01-31',1,1),
  ('2018-01-07','2018-02-7',2,1),
  ('2018-03-25','2018-04-07',3,1),
  ('2018-04-01','2018-04-10',5,2),
  ('2018-04-05','2018-04-15',1,2)
  ('2018-01-05','2018-01-30',3,5),
  ('2018-01-15','2018-02-01',4,5),
  ('2018-03-29','2018-04-01',5,5),
  ('2018-04-09','2018-04-16',1,4),
  ('2018-04-16','2018-04-25',2,4)
  ('2018-03-05','2018-04-30',1,3);
--SELECT * FROM teams;
SELECT
  t.team_id,
  t.start_training,
  t.end_training,
  t.group_number,
  p.program_id,
  s.specialty_id,
  s.specialty_name,
  s.specialty_code,
  p.approval_date
FROM teams t
INNER JOIN programs p ON t.program = p.program_id
INNER JOIN specialties s ON p.specialty = s.specialty_id
WHERE team_id = 10;